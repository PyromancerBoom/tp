@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":FilterCommandParser" as FilterCommandParser LOGIC_COLOR
participant "fc:FilterCommand" as FilterCommand LOGIC_COLOR
participant "cr:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "predicate:Predicate<Employee>" as Predicate MODEL_COLOR
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("filter [criteria]")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("filter [criteria]")
activate AddressBookParser

create FilterCommandParser
AddressBookParser -> FilterCommandParser
activate FilterCommandParser

FilterCommandParser --> AddressBookParser
deactivate FilterCommandParser

AddressBookParser -> FilterCommandParser : parse("[criteria]")
activate FilterCommandParser

create Predicate
FilterCommandParser -> Predicate
activate Predicate

Predicate --> FilterCommandParser
deactivate Predicate

create FilterCommand
FilterCommandParser -> FilterCommand
activate FilterCommand

FilterCommand --> FilterCommandParser : fc
deactivate FilterCommand

FilterCommandParser --> AddressBookParser : fc
deactivate FilterCommandParser

FilterCommandParser -[hidden]-> AddressBookParser
destroy FilterCommandParser

AddressBookParser --> LogicManager : fc
deactivate AddressBookParser

AddressBookParser -[hidden]-> LogicManager
destroy AddressBookParser

LogicManager -> FilterCommand : execute()
activate FilterCommand

FilterCommand -> Model : updateFilteredEmployeeList(predicate)
activate Model

Model --> FilterCommand
deactivate Model

create CommandResult
FilterCommand -> CommandResult
activate CommandResult

CommandResult --> FilterCommand : cr
deactivate CommandResult

FilterCommand --> LogicManager : cr
deactivate FilterCommand

[<-- LogicManager
deactivate LogicManager
@enduml
